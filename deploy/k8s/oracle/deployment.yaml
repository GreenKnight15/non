apiVersion: apps/v1
kind: Deployment
metadata:
  name: non
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nonv3
  template:
    metadata:
      labels:
        app: nonv3
    spec:
      containers:
        - name: non
          image: greenknight15/non:v3
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
          env:
            - name: MONGODB_HOST
              value: "mongodb.default.svc.cluster.local:27017"
            - name: MONGODB_USER
              value: "non"
            - name: MONGODB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mongodb
                  key: mongodb-password
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: non-dev
spec:
  replicas: 3
  selector:
    matchLabels:
      app: nonv4
  template:
    metadata:
      labels:
        app: nonv4
    spec:
      containers:
        - name: non
          image: greenknight15/non:v4.2.0
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
          env:
            - name: MONGODB_HOST
              value: "mongodb.default.svc.cluster.local:27017"
            - name: MONGODB_USER
              value: "non"
            - name: MONGODB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mongodb
                  key: mongodb-password
---
kind: Service
apiVersion: v1
metadata:
  name: nginx-service
  annotations:
    service.beta.kubernetes.io/oci-load-balancer-ssl-ports: "443"
    service.beta.kubernetes.io/oci-load-balancer-tls-secret: ssl-certificate-secret
    service.beta.kubernetes.io/oci-load-balancer-backend-protocol: "HTTP"
    service.beta.kubernetes.io/oci-load-balancer-security-list-management-mode: "Frontend"
spec:
  selector:
    app: nonv4
  type: LoadBalancer
  ports:
    - name: https
      port: 443
      targetPort: 8080